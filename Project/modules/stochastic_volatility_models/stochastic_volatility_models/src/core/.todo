St vs S0??? Ask Adam

Write custom cacher for pricing of models by pairs


- Move types
- Evaluation functions
- Heston fit
- Heston simulation

- [ ] Redo everywhere where I have used underlying.future_price(time=time) to use the correct expiry
- [ ] Also when to use am_settlement for futures?

Function to check all surfaces of pairs plotted for initial parameters to check cost function locally convex and has unique minimum

Use black scholes with dividend yield:
---------
For European options you can utilise put-call parity and reverse out the implied dividend yield.
I.e.
F(T,K) = C(T,K) - P(T,K)
and obviously
F(T) = S(t)*e^[(r-d)*(T-t)]

P-C = Ke^-rt - Se^-qt
P = C + Ke^-rt - Se^-qt
P = C + Ke^-rt - Se^-qt

C = Se^-qt P_1 - Ke^-rt P_2
P = Se^-qt (P_1-1) - Ke^-rt (P_2-1)
----------

- After Heston look at realised estimators

- Test vol surface
- SSVI Fit vol surface
- Implement objective functions
- Implement fitting
- Finish heston model by Friday
- Sort todos in pricing models

- Streamlit app to do choices

Cost Function: 2401.03345v1.pdf, 2001.01789v1.pdf, 2301.13235v1.pdf
Cite Heston characteristic function and pricing


1.
Objective Functions:
Fitting Heston:
	☐ Need objective functions
Simulating Heston:
	☐
Integrated Volatility:
	☐

2.
Get data:
	☐ Store
	☐ Be able to pull

3.
Overall volatility surfaces:
	☐ Interpolation? Spline?
	☐ Conversion of strikes to log moneyness
	☐ Converion of expiries to T2X

4.
General simulation of paths:
General fitting parameters:

??
How to deal with leap years?
- Deal with dividends in base black scholes
- What is black scholes merton?



Future work:

- Heston proper pricing Cui et al


Emphasize the realisticness of the data used compared to common simplifications



p1 = {'initial_variance': 1.5735434638117027,
'long_term_variance': -5.585043916635598,
'volatility_of_volatility': -1.4008118465141628,
'mean_reversion_rate': 2.7847101214701397,
'wiener_correlation': -0.8231322657874336}
